<h3><%= t("edit_password.title") %></h3>
<%= form_tag update_password_manager_path(id: @manager.id), method: 'put' do %>
  <table class='table table-hover table-bordered table-striped'>
    <tr>
      <td style='width: 150px'>
        <%= t("edit_password.old_password") %>
      </td>
      <td>
        <%= password_field_tag :old_password, '', class: 'form-control', style: 'display: inline; width: 200px' %>
      </td>
    </tr>
    <tr>
      <td>
        <%= t("edit_password.new_password") %>
      </td>
      <td>
        <%= password_field_tag :new_password, '', class: 'form-control', style: 'display: inline; width: 200px' %>
      </td>
    </tr>
    <tr>
      <td>
        <%= t("edit_password.reset_new_password") %>
      </td>
      <td>
        <%= password_field_tag :repeat_new_password, '', class: 'form-control', style: 'display: inline; width: 200px' %>
      </td>
    </tr>
    <tr>
      <td colspan=2>
        <%= submit_tag t("public.submit"), class: 'btn btn-primary' %>
      </td>
    </tr>
  </table>
<% end %>

<script>
$('#old_password').focus()
$("form tr").each(function(i, e){
  $(e).append("<td style='width: 200px'></td>")
})
$("form").validate({
    rules: {
      'old_password': {
        required: true,
        minlength: 4,
      },
      'new_password': {
        required: true,
        minlength: 8,
      },
      'repeat_new_password': {
        required: true,
        minlength: 8,
        equalTo: '#new_password' // 这里用的是# selector. 不是input name
      }
    },
    messages: {
    },
    // 验证通过后，该怎么办
    success: function(label) {
      // 这里的 &nbsp; 是不能省略的．否则会导致　对号看不到．（label的样式在某些情况下是display:inline-block的)
      label.html("&nbsp;").addClass("checked");
    },
    // 验证失败后，该怎么办　（注意：这里对于ＤＯＭ的安排，要略加调整)
    highlight: function(element, errorClass) {
      // 适用于把　错误信息，显示在隔壁tr中，　例如：
      /*   <tr>  <td>输入框</td><td> 　Ｘ不能为空</td>   <tr/> */
      $(element).parent().next().find("." + errorClass).removeClass("checked");

    },
     errorPlacement: function(error, element) {
       error.appendTo(element.closest('td').next());
     }
  })
</script>
